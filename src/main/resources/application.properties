spring.application.name=inboop-backend

# Server Configuration
server.port=8080

# CORS Configuration
app.cors.allowed-origins=${ALLOWED_ORIGINS:http://localhost:3000,http://localhost:3001}

# Google OAuth2
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=email,profile
spring.security.oauth2.client.registration.google.redirect-uri=${BACKEND_URL:http://localhost:8080}/login/oauth2/code/google

# Database Configuration (H2 for development, PostgreSQL for production)
spring.datasource.url=${DB_URL:jdbc:h2:file:./data/inboop}
spring.datasource.driverClassName=${DB_DRIVER:org.h2.Driver}
spring.datasource.username=${DB_USER:sa}
spring.datasource.password=${DB_PASSWORD:password}

# JPA / Hibernate
spring.jpa.database-platform=${DB_PLATFORM:org.hibernate.dialect.H2Dialect}
spring.jpa.hibernate.ddl-auto=${DDL_AUTO:update}
spring.jpa.show-sql=${JPA_SHOW_SQL:true}
spring.jpa.properties.hibernate.format_sql=true

# H2 Console (disable in production)
spring.h2.console.enabled=${H2_CONSOLE_ENABLED:true}
spring.h2.console.path=/h2-console

# Instagram API Configuration
instagram.api.base-url=https://graph.instagram.com
instagram.api.version=v21.0
instagram.webhook.verify-token=${INSTAGRAM_WEBHOOK_VERIFY_TOKEN:inboop_verify_token}

# Logging
logging.level.com.inboop.backend=${LOG_LEVEL:INFO}
logging.level.org.springframework.web=${LOG_LEVEL_WEB:INFO}
logging.level.org.hibernate.SQL=${LOG_LEVEL_SQL:DEBUG}

